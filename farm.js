// Generated by CoffeeScript 1.9.3
(function() {
  var exports, http, path, server;

  path = require('path');

  http = require('http');

  server = require('wiki-server');

  module.exports = exports = function(argv) {
    var farmServ, hosts, runningFarmServ, runningServers;
    hosts = {};
    runningServers = [];
    farmServ = http.createServer(function(req, res) {
      var incHost, key, local, neighbors, newargv, ref, value;
      if ((ref = req.headers) != null ? ref.host : void 0) {
        incHost = req.headers.host;
      } else {
        return res.status(400).send('Missing host header');
      }
      if (incHost.slice(0, 4) === "www.") {
        incHost = incHost.slice(4);
      }
      if (hosts[incHost]) {
        return hosts[incHost](req, res);
      } else {
        newargv = {};
        for (key in argv) {
          value = argv[key];
          newargv[key] = value;
        }
        newargv.data = argv.data ? path.join(argv.data, incHost.split(':')[0]) : path.join(argv.root, 'data', incHost.split(':')[0]);
        newargv.url = "http://" + incHost;
        local = server(newargv);
        hosts[incHost] = local;
        runningServers.push(local);
        if (argv.autoseed) {
          neighbors = argv.neighbors ? argv.neighbors + ',' : '';
          neighbors += Object.keys(hosts).join(',');
          runningServers.forEach(function(server) {
            return server.startOpts.neighbors = neighbors;
          });
        }
        return local.once("owner-set", function() {
          return hosts[incHost](req, res);
        });
      }
    });
    return runningFarmServ = farmServ.listen(argv.port, argv.host);
  };

}).call(this);
